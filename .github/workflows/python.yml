# Adapted from: https://github.com/zenml-io/zenml
# Adapted from: https://luminousmen.com/post/making-ci-workflow-faster-with-github-actions

name: Python CI

on:
  pull_request:
    branches: main
    paths: ['src/**', 'tests/**', 'pyproject.toml', 'poetry.lock', '.flake8']
  push:
    branches: main
    paths: ['src/**', 'tests/**', 'pyproject.toml', 'poetry.lock', '.flake8']

concurrency:
  # new commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup poetry
        uses: ./.github/actions/setup-poetry

      - name: Cache poetry virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Format with black
        run: |
          poetry run black --diff --check .

      - name: Lint with flake8
        run: |
          poetry run flake8 --show-source --statistics .

      - name: Test with pytest
        run: poetry run pytest --cov-report 'xml:coverage.xml' --junitxml 'pytest.xml'

      - name: Pytest coverage comment
        if: github.event_name == 'pull_request'
        uses: MishaKav/pytest-coverage-comment@main
        with:
          create-new-comment: true
          pytest-xml-coverage-path: ./coverage.xml
          junitxml-path: ./pytest.xml
